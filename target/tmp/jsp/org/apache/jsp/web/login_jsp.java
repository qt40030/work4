/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: jetty/9.3.7.v20160115
 * Generated at: 2018-12-24 09:11:52 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.web;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class login_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/web/page/header.jsp", Long.valueOf(1543800416028L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");

 String app = request.getContextPath(); 
    app += "/web"; 
  String path = app + "/common";

      out.write("\r\n");
      out.write("<meta charset=\"utf-8\">\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1\">\r\n");
      out.write("<meta name=\"renderer\" content=\"webkit\">\r\n");
      out.write("<meta name=\"apple-mobile-web-app-status-bar-style\" content=\"black\">\r\n");
      out.write("<meta name=\"apple-mobile-web-app-capable\" content=\"yes\">\r\n");
      out.write("<meta name=\"format-detection\" content=\"telephone=no\">\r\n");
      out.write("<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\r\n");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" href=\"/work4/web/common//layui/css/layui.css\">\r\n");
      out.write("<script type=\"text/javascript\" src=\"/work4/web/common/layui/layui.all.js\"></script>\r\n");
      out.write(" <script type=\"text/javascript\" src=\"/work4/web/common/js/jquery-3.3.1.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\" src=\"/work4/web/common/js/common.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<fieldset class=\"layui-elem-field\"\r\n");
      out.write("\t\tstyle=\"margin: 160px auto;padding:20px;width: 390px;\">\r\n");
      out.write("<legend>登录</legend>\r\n");
      out.write("<div>\r\n");
      out.write("<form class=\"layui-form\" action=\"\">\r\n");
      out.write("<div class=\"layui-form-item\">\r\n");
      out.write("<label class=\"layui-form-label\">账号</label>\r\n");
      out.write("      <div class=\"layui-input-inline\">\r\n");
      out.write("        <input type=\"text\" name=\"code\" autocomplete=\"off\" class=\"layui-input\" placeholder=\"请输入账号\" lay-verify=\"required\">\r\n");
      out.write("      </div>\r\n");
      out.write("</div>\r\n");
      out.write("<div class=\"layui-form-item\">\r\n");
      out.write("<label class=\"layui-form-label\">密码</label>\r\n");
      out.write("      <div class=\"layui-input-inline\">\r\n");
      out.write("        <input type=\"password\" name=\"pass\" autocomplete=\"off\" class=\"layui-input\" placeholder=\"请输入密码\" lay-verify=\"required\">\r\n");
      out.write("      </div>\r\n");
      out.write("</div>\r\n");
      out.write("<div class=\"layui-form-item\">\r\n");
      out.write("<label class=\"layui-form-label\">验证码</label>\r\n");
      out.write("      <div class=\"layui-input-inline\">\r\n");
      out.write("        <input type=\"text\" name=\"authCode\" autocomplete=\"off\" class=\"layui-input\" placeholder=\"请输入验证码\" lay-verify=\"required\">\r\n");
      out.write("      <img src=\"/work4/CodeServlet\" onclick=\"this.src='/work4/CodeServlet?'+Math.random();\"/>\r\n");
      out.write("      </div>\r\n");
      out.write("</div>\r\n");
      out.write("<div class=\"layui-form-item\">\r\n");
      out.write("    <div class=\"layui-input-inline\">\r\n");
      out.write("      <input value=\"登录\" type=\"button\" class=\"layui-btn\" lay-submit lay-filter=\"login\"/>\r\n");
      out.write("      <input value=\"重置\" type=\"reset\" class=\"layui-btn layui-btn-primary\" >\r\n");
      out.write("    </div>\r\n");
      out.write("        <input value=\"注册\" type=\"button\" class=\"layui-btn\" id=\"register\">\r\n");
      out.write("</div>\r\n");
      out.write("  <input type=\"hidden\" name=\"action\" value=\"login\">\r\n");
      out.write("</form>\r\n");
      out.write("</div>\r\n");
      out.write("</fieldset>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("$(function(){\r\n");
      out.write("\t$(\"#register\").click(toReg)\r\n");
      out.write("})\r\n");
      out.write("function toReg() {\r\n");
      out.write("\tlocation.href=\"/work4/web/register.jsp\"\r\n");
      out.write("}\r\n");
      out.write("var form=layui.form;\r\n");
      out.write("form.on('submit(login)', function(data){\r\n");
      out.write("$.ajax({\r\n");
      out.write("\turl:\"/work4/userController/login.do\",\r\n");
      out.write("\tdata:data.field,\r\n");
      out.write("\tdataType:'text',\r\n");
      out.write("\ttype:'post',\r\n");
      out.write("\tsuccess:function(data){\r\n");
      out.write("\t\tif(data==0){\r\n");
      out.write("\t\t\tlocation.href=\"/work4/web/page/index.jsp\"\r\n");
      out.write("\t\t}else if(data==1){\r\n");
      out.write("\t\t\tlocation.href=\"/work4/web/store/index.jsp\"\r\n");
      out.write("\t\t}else if(data==2){\r\n");
      out.write("\t\t\tlayer.msg('账号或密码错误');\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\telse if(data==3){\r\n");
      out.write("\t\t\tlayer.msg('验证码错误');\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("})\r\n");
      out.write("});\r\n");
      out.write("</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
